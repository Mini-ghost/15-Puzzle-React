{"version":3,"sources":["action/index.js","components/PuzzleItem.js","components/Completed.js","components/PuzzleCover.js","App.js","reducer/index.js","index.js"],"names":["INIT_PUZZLE","num","type","UPDATE_MOVE","update","SET_COMPLETE","complete","Item","styled","div","ItemContent","PuzzleItem","handleClick","position","props","item","emptyArray","index","col","Math","abs","row","moveEmpty","updateMove","this","number","itemWidth","styleObject","top","left","style","onClick","Component","connect","state","dispatch","MOVE_EMPTY","Content","Title","h2","Depiction","p","Completed","Cover","Button","button","PuzzleCover","playToggle","h1","Moves","Puzzle","PuzzleContent","PuzzleGroup","Reset","ResetItem","App","width","getWindowWidth","setState","window","innerWidth","handleReset","initPuzzle","handleStart","togglePlay","prevProps","puzzle","play","every","join","value","setComplete","setTimeout","addEventListener","removeEventListener","move","map","key","initMultiArrays","floor","checkResolvable","ary","space","findIndex","spaceX","newAry","splice","countComputed","count","forEach","_ary","length","_index","emptyIndex","sum","push","resolvable","sort","random","emptyPosition","id","TOGGLE_PLAY","action","storeState","puzzleStore","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae0a8aa5.chunk.js","sourcesContent":["/** 初始化遊戲 */\r\nconst INIT_PUZZLE = num => {\r\n  return {\r\n    type: 'INIT_PUZZLE',\r\n    num\r\n  }\r\n}\r\n\r\n/** 滑動物件 */\r\nconst MOVE_EMPTY = index => {\r\n  return {\r\n    type: 'MOVE_EMPTY',\r\n    index\r\n  }\r\n}\r\n\r\nconst UPDATE_MOVE = (update) => {\r\n  return {\r\n    type: 'UPDATE_MOVE',\r\n    update\r\n  }\r\n}\r\n\r\nconst TOGGLE_PLAY = () => {\r\n  return {\r\n    type: 'TOGGLE_PLAY'\r\n  }\r\n}\r\n\r\nconst SET_COMPLETE = complete => {\r\n  return {\r\n    type: 'SET_COMPLETE',\r\n    complete\r\n  }\r\n}\r\n\r\nexport {\r\n  INIT_PUZZLE,\r\n  MOVE_EMPTY,\r\n  UPDATE_MOVE,\r\n  TOGGLE_PLAY,\r\n  SET_COMPLETE\r\n}","import React, { Component } from 'react';\r\nimport styled from 'styled-components'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { MOVE_EMPTY, UPDATE_MOVE } from '../action'\r\n\r\nconst Item = styled.div`\r\n\twidth: 25%;\r\n\theight: 25%;\r\n\tpadding: 10px;\r\n\tposition: absolute;\r\n\ttransition: .5s;\r\n\t@media (max-width: 667px) {\r\n\t\tpadding: 6px\r\n\t}\r\n`\r\n\r\nconst ItemContent = styled.div`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tcolor: #efefef;\r\n\tbackground-color: #313747;\r\n\tcolor: white;\r\n\tborder-radius: 12px;\r\n\tfont-size: 36px;\r\n\tcursor: pointer;\r\n\ttransition: 0.5s;\r\n\t&:hover {\r\n\t\tbackground-color: #252a37\r\n\t}\r\n\t@media (max-width: 667px)  {\r\n\t\tfont-size: 28px;\r\n\t}\r\n`\r\n\r\nconst mapStateToProps = state => {\r\n\tconst { emptyArray, complete } = state\r\n\treturn { emptyArray, complete }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tmoveEmpty: index => {\r\n\t\t\tdispatch(MOVE_EMPTY(index))\r\n\t\t},\r\n\t\tupdateMove: (num) => {\r\n\t\t\tdispatch(UPDATE_MOVE(num))\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass PuzzleItem extends Component {\r\n\r\n\thandleClick = () => {\r\n\t\tconst { position } = this.props.item\r\n\t\tconst { emptyArray, index, complete } = this.props\r\n    /** 差幾列 */\r\n    const col = Math.abs(emptyArray[0] - position[0]);\r\n    /** 差幾行 */\r\n\t\tconst row = Math.abs(emptyArray[1] - position[1]);\r\n    /** 判斷該物件是否相鄰 */\r\n\t\tconst isNeighbor = col + row === 1;\r\n\t\tif (!complete && isNeighbor) {\r\n\t\t\t/** 改變點選物件座標 */\r\n\t\t\tthis.props.moveEmpty(index)\r\n\t\t\t/** 更新計步器 */\r\n\t\t\tthis.props.updateMove(true)\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { number, position } = this.props.item\r\n\t\tconst { itemWidth } = this.props\r\n\t\t/** 物件 style */\r\n\t\tconst styleObject = {\r\n\t\t\ttop: `${position[1] * itemWidth}px`,\r\n\t\t\tleft: `${position[0] * itemWidth}px`\r\n\t\t}\r\n\t\treturn(\r\n\t\t\t<Item style={ styleObject }>\r\n\t\t\t\t<ItemContent onClick={ this.handleClick }>\r\n\t\t\t\t\t{ number }\r\n\t\t\t\t</ItemContent>\r\n\t\t\t</Item>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PuzzleItem)","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Content = styled.div`\r\n  margin: 2rem 0\r\n`\r\nconst Title = styled.h2`\r\n  font-size: 36px;\r\n  margin-top: 18px;\r\n  margin-botton: 18px;\r\n  color: #ffe564;\r\n`\r\n\r\nconst Depiction = styled.p`\r\nfont-size: 16px;\r\nmargin-top: 8px;\r\nmargin-botton: 8px;\r\ncolor: rgb(255, 229, 100);\r\n`\r\n\r\nexport default function Completed() {\r\n  return (\r\n    <Content>\r\n      <Title>Congratulations </Title>\r\n      <Depiction>\r\n        You have successfully completed this \r\n        <strong> 15 puzzle </strong>\r\n      </Depiction>\r\n    </Content>\r\n  );\r\n}","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nimport Completed from './Completed'\r\n\r\nconst Cover = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  flex-direction: column;\r\n  background-color: rgba(37, 38, 39, 0.5);\r\n  border-radius: 16px;\r\n  font-weight: bold;\r\n  z-index: 9\r\n`\r\nconst Button = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  outline: none;\r\n  color: inherit;\r\n  font: inherit;\r\n  cursor: pointer;\r\n  color: #61dafb;\r\n  font-size: 72px;\r\n`\r\n\r\nexport default function PuzzleCover({ complete, playToggle }) {\r\n  return (\r\n    <Cover>\r\n      { complete && <Completed /> }\r\n      <Button onClick={ () => playToggle() }>Play</Button>\r\n    </Cover>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { INIT_PUZZLE, TOGGLE_PLAY, SET_COMPLETE, UPDATE_MOVE } from './action'\r\n\r\n// components\r\nimport PuzzleItem from './components/PuzzleItem'\r\nimport PuzzleCover from './components/PuzzleCover'\r\n\r\nconst sec = 0.5\r\n/** 外層容器 */\r\nconst Content = styled.div`\r\n  font-family: \"Shadows Into Light\", \"Avenir\", Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #61dafb;\r\n  margin-top: 60px;\r\n  user-select: none;\r\n`\r\nconst Title = styled.h1`\r\n  font-weight: bold;\r\n  font-size: 40px;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n`\r\nconst Moves = styled.p`\r\n  font-weight: bold;\r\n  font-size: 24px;\r\n  margin-top: 16px;\r\n  margin-bottom: 16px;\r\n\r\n`\r\nconst Puzzle = styled.div`\r\n  position: relative;\r\n  width: 500px;\r\n  height: 500px;\r\n  margin-top: 2.5vw;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  box-shadow: 0 0 10px rgba(0, 0 ,0 , .35);\r\n  border-radius: 16px;\r\n  overflow: hidden;\r\n  transition: ${sec}s;\r\n  background-color: #1f2229;\r\n  @media (max-width: 667px) {\r\n    width: 320px;\r\n    height: 320px\r\n  }\r\n`\r\n\r\nconst PuzzleContent = styled.div`\r\n  padding: 5px;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst PuzzleGroup = styled.div`\r\n  position: relative;\r\n  width: calc(100% - 10px);\r\n  height: calc(100% - 10px);\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  font-size: 2.125rem;\r\n  @media (max-width: 667px) {\r\n    width: calc(100% - 6px);\r\n    height: calc(100% - 6px)\r\n  }\r\n`\r\nconst Reset = styled.div`\r\n  font-size: 36px;\r\n  margin-top: 18px;\r\n  margin-bottom: 18px\r\n`\r\n\r\nconst ResetItem = styled.div`\r\n  position: relative;\r\n  color: #61dafb;\r\n  font-weight: bold;\r\n  cursor: pointer\r\n`\r\n\r\nconst mapStateToProps = state => state\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    initPuzzle: (num = 4) => {\r\n      dispatch(SET_COMPLETE(false))\r\n      dispatch(INIT_PUZZLE(num))\r\n    },\r\n    togglePlay: () => {\r\n      dispatch(TOGGLE_PLAY())\r\n    },\r\n    setComplete: (type) => {\r\n      dispatch(SET_COMPLETE(type))\r\n    },\r\n\t\tupdateMove: (update) => {\r\n\t\t\tdispatch(UPDATE_MOVE(update))\r\n\t\t}\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n\r\n  state = { width: 0 }\r\n\r\n  get itemWidth() {\r\n    return this.state.width > 667? 120 : 77\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { puzzle, play } = this.props\r\n    const complete = puzzle.every(item => item.position.join('') === item.value.join(''))\r\n    if (complete && play) {\r\n      this.props.setComplete(complete)\r\n      setTimeout(() => { this.props.togglePlay() }, 1000);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getWindowWidth()\r\n    window.addEventListener('resize', this.getWindowWidth)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.getWindowWidth)\r\n  }\r\n\r\n  getWindowWidth = () => {\r\n    this.setState(() => ({ width: window.innerWidth }))\r\n  }\r\n\r\n  /** 重新開始 */\r\n  handleReset = () => {\r\n    this.props.initPuzzle();\r\n    this.props.updateMove(false)\r\n  }\r\n\r\n  /** 開始遊戲 */ \r\n  handleStart = () => {\r\n    this.props.togglePlay()\r\n    this.handleReset()\r\n  }\r\n\r\n  render() {\r\n    const { puzzle, complete, move, play } = this.props\r\n    const { itemWidth } = this\r\n    return (\r\n      <Content>\r\n        <Title> 15 puzzle </Title>\r\n        <Moves> MOVE{ move > 1 && 'S' }：{ move }</Moves>\r\n        <Puzzle>\r\n          <PuzzleContent>\r\n            {\r\n              !play && <PuzzleCover playToggle={ this.handleStart } complete={ complete }/>\r\n            }\r\n            <PuzzleGroup>\r\n              {\r\n                puzzle.map((item, index) => (\r\n                  <PuzzleItem\r\n                    item={item}\r\n                    index={index}\r\n                    itemWidth={itemWidth}\r\n                    key={item.number}\r\n                  />\r\n                ))\r\n              }\r\n            </PuzzleGroup>\r\n          </PuzzleContent>\r\n        </Puzzle>\r\n        {\r\n          play && <Reset>\r\n            <ResetItem onClick={() => this.handleReset()}>reset</ResetItem>\r\n          </Reset>\r\n        }\r\n      </Content>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","/** 數字轉座標 */\r\nconst initMultiArrays = num => {\r\n  return [ num % 4, Math.floor(num / 4) ]\r\n}\r\n/** 初始化拼圖資料 */\r\nconst initPuzzle = num => {\r\n  const sum = num * num\r\n  const puzzle = []\r\n  for (let number = 1; number <= sum; number++) {\r\n    const value = initMultiArrays(number - 1)\r\n    puzzle.push({ number, value, position: [0, 0]})\r\n  }\r\n  return puzzle\r\n}\r\n/** 比對資料是否有解答 */\r\nconst checkResolvable = ary=> {\r\n  /** 16 的序號 */\r\n  const space = ary.findIndex(item => item.number === 16)\r\n  /** 16 的列（X軸位置） */\r\n  const spaceX = initMultiArrays(space)[0] + 1\r\n  // splice 會動到原本的陣列，所以這裡解構出一個陣列來操作\r\n  const newAry = (ary => {\r\n    ary.splice(space, 1)\r\n    return ary\r\n  })([...ary])\r\n  /** 逆序列數 */\r\n  const count = countComputed(newAry)\r\n  return count % 2 + spaceX % 2 === 1\r\n}\r\n/** 逆序列累加 */\r\nconst countComputed = ary => {\r\n  let count = 0\r\n  ary.forEach((item, index, _ary) => {\r\n    const length = ary.length\r\n    let _index = index + 1\r\n    while (_index < length) {\r\n      // item.number 後面的數字只要有比我小的就加 1\r\n      if (item.number > _ary[_index].number) count++\r\n      _index++\r\n    }\r\n  })\r\n  return count\r\n}\r\n\r\n/** 初始化 puzzle 資料 */\r\nconst INIT_PUZZLE = (state, { num }) => {\r\n  const puzzle = initPuzzle(num)\r\n  let emptyIndex = 0\r\n  let emptyArray = [0, 0]\r\n  let resolvable = false\r\n  while (!resolvable) {\r\n    /** 打亂初始化的 puzzle 資料 */\r\n    puzzle.sort(() => (Math.random() > 0.5 ? 1 : -1))\r\n    resolvable = checkResolvable(puzzle)\r\n  }\r\n  /** 排組亂數後賦予定位 */\r\n  puzzle.forEach((item, index) => {\r\n    item.position = initMultiArrays(index)\r\n  })\r\n  /** 設定空格資料 */\r\n  emptyIndex = puzzle.findIndex(item => item.number === 16)\r\n  emptyArray = initMultiArrays(emptyIndex)\r\n  puzzle.splice(emptyIndex, 1)\r\n\r\n  return { ...state, puzzle, emptyArray }\r\n}\r\n/** 滑塊移動，改變現有 state */\r\nconst MOVE_EMPTY = (state, { index }) => {\r\n  let { puzzle, emptyArray } = state\r\n  const { position } = puzzle[index]\r\n  const emptyPosition = [...emptyArray]\r\n  emptyArray = [...position]\r\n  puzzle = puzzle.map((item, id) => {\r\n    if (id === index) return {...item,position: emptyPosition}\r\n    return item\r\n  })\r\n  return { ...state, puzzle, emptyArray }\r\n}\r\n\r\n/** 更新計步器 */\r\nconst UPDATE_MOVE = (state, { update }) => {\r\n  let { move } = state\r\n  update? move += 1 : move = 0\r\n  return { ...state, move }\r\n}\r\n\r\n/** 遊戲狀態切換 */\r\nconst TOGGLE_PLAY = (state, action) => {\r\n  const { play } = state\r\n  return { ...state, play: !play }\r\n}\r\n\r\nconst SET_COMPLETE = (state, { complete }) => {\r\n  return { ...state, complete }\r\n}\r\n\r\nconst storeState = {\r\n  puzzle: [],\r\n  emptyArray: [],\r\n  move: 0,\r\n  complete: false,\r\n  play: false\r\n}\r\n\r\nconst puzzleStore = (state = storeState, action) => {\r\n  switch (action.type) {\r\n    case 'INIT_PUZZLE':\r\n      return INIT_PUZZLE(state, action)\r\n    case 'MOVE_EMPTY':\r\n      return MOVE_EMPTY(state, action)\r\n    case 'UPDATE_MOVE':\r\n      return UPDATE_MOVE(state, action) \r\n    case 'TOGGLE_PLAY':\r\n      return TOGGLE_PLAY(state, action)\r\n    case 'SET_COMPLETE':\r\n      return SET_COMPLETE(state, action)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default puzzleStore","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport './reset.css'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport puzzleStore from './reducer'\r\nimport { createStore } from \"redux\";\r\n\r\nconst store = createStore(\r\n  puzzleStore,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nReactDOM.render(\r\n  <Provider store={ store }>\r\n    <App />\r\n  </Provider>, document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}